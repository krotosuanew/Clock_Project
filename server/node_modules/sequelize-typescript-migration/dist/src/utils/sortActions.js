"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function sortActions(actions) {
    const orderedActionTypes = [
        "removeIndex",
        "removeColumn",
        "dropTable",
        "createTable",
        "addColumn",
        "changeColumn",
        "addIndex",
    ];
    actions.sort((left, right) => {
        if (orderedActionTypes.indexOf(left.actionType) <
            orderedActionTypes.indexOf(right.actionType)) {
            return -1;
        }
        if (orderedActionTypes.indexOf(left.actionType) >
            orderedActionTypes.indexOf(right.actionType)) {
            return 1;
        }
        if (left.actionType == "dropTable" && right.actionType == "dropTable") {
            if (left.depends.length === 0 && right.depends.length > 0) {
                return 1;
            }
            if (right.depends.length === 0 && right.depends.length > 0) {
                return -1;
            }
            return 0;
        }
        if (left.depends.length === 0 && right.depends.length > 0) {
            return -1;
        }
        if (right.depends.length === 0 && right.depends.length > 0) {
            return 1;
        }
        return 0;
    });
    for (let i = 0; i < actions.length; i++) {
        if (!actions[i].depends || actions[i].depends.length === 0) {
            continue;
        }
        const left = actions[i];
        for (let j = 0; j < actions.length; j++) {
            if (!actions[j].depends || actions[j].depends.length === 0) {
                continue;
            }
            const right = actions[j];
            if (left.actionType != right.actionType) {
                continue;
            }
            if (right.depends.indexOf(left.tableName) !== -1) {
                if (i > j) {
                    const c = actions[i];
                    actions[i] = actions[j];
                    actions[j] = c;
                }
            }
        }
    }
}
exports.default = sortActions;
//# sourceMappingURL=sortActions.js.map