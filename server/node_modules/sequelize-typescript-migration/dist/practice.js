"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("./index");
const sequelize_typescript_1 = require("sequelize-typescript");
const sequelize_typescript_2 = require("sequelize-typescript");
const path = require("path");
let CarBrand = class CarBrand extends sequelize_typescript_2.Model {
};
__decorate([
    sequelize_typescript_2.Column,
    __metadata("design:type", String)
], CarBrand.prototype, "name", void 0);
__decorate([
    sequelize_typescript_2.Default(true),
    sequelize_typescript_2.Column(sequelize_typescript_2.DataType.BOOLEAN),
    __metadata("design:type", Boolean)
], CarBrand.prototype, "isCertified", void 0);
__decorate([
    sequelize_typescript_2.Column,
    __metadata("design:type", String)
], CarBrand.prototype, "imgUrl", void 0);
__decorate([
    sequelize_typescript_2.Column,
    __metadata("design:type", Number)
], CarBrand.prototype, "orderNo", void 0);
__decorate([
    sequelize_typescript_2.Column,
    __metadata("design:type", Number)
], CarBrand.prototype, "carsCount", void 0);
CarBrand = __decorate([
    sequelize_typescript_2.Table
], CarBrand);
exports.CarBrand = CarBrand;
let Car = class Car extends sequelize_typescript_2.Model {
};
__decorate([
    sequelize_typescript_2.Column,
    __metadata("design:type", String)
], Car.prototype, "name", void 0);
__decorate([
    sequelize_typescript_1.ForeignKey(() => CarBrand),
    sequelize_typescript_2.Column,
    __metadata("design:type", Number)
], Car.prototype, "carBrandId", void 0);
__decorate([
    sequelize_typescript_1.BelongsTo(() => CarBrand),
    __metadata("design:type", CarBrand)
], Car.prototype, "carBrand", void 0);
Car = __decorate([
    sequelize_typescript_2.Table
], Car);
exports.Car = Car;
const bootstrap = async () => {
    const sequelize = new sequelize_typescript_1.Sequelize({
        username: "kimjbstar",
        password: "12091457",
        database: "test_migration2",
        host: "localhost",
        dialect: "mysql",
        models: [CarBrand, Car],
        timezone: "+09:00",
        logging: false,
    });
    try {
        const result = await index_1.SequelizeTypescriptMigration.makeMigration(sequelize, {
            outDir: path.join(__dirname, "../migrations"),
        });
        console.log(result);
    }
    catch (e) {
        console.log(e);
    }
};
bootstrap();
//# sourceMappingURL=practice.js.map